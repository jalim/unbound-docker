---
name: Rebuild Docker Image

'on':
  workflow_dispatch:
    inputs:
      force_latest_only:
        description: 'Only rebuild latest tag (skip versioned tags)'
        required: false
        type: boolean
        default: false

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read
  packages: write

jobs:
  rebuild-and-push:
    name: Rebuild and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Get latest release tag
        id: get_tag
        run: |
          # Get the latest semantic version tag
          LATEST_TAG=$(git tag --sort=-v:refname | grep -E '^v?[0-9]+\.[0-9]+\.[0-9]+$' | head -1)

          if [ -z "$LATEST_TAG" ]; then
            echo "No release tags found. Using 'latest' only."
            echo "version=" >> $GITHUB_OUTPUT
            echo "has_version=false" >> $GITHUB_OUTPUT
          else
            echo "Found latest release tag: $LATEST_TAG"
            # Remove 'v' prefix if present
            VERSION=${LATEST_TAG#v}
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "has_version=true" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) - with version
        if: steps.get_tag.outputs.has_version == 'true' && inputs.force_latest_only == false
        id: meta_version
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{ steps.get_tag.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.get_tag.outputs.version }}
            type=semver,pattern={{major}},value=${{ steps.get_tag.outputs.version }}
            type=raw,value=latest

      - name: Extract metadata (tags, labels) - latest only
        if: steps.get_tag.outputs.has_version == 'false' || inputs.force_latest_only == true
        id: meta_latest
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta_version.outputs.tags || steps.meta_latest.outputs.tags }}
          labels: ${{ steps.meta_version.outputs.labels || steps.meta_latest.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Summary
        run: |
          echo "## Docker Image Rebuilt Successfully! :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.get_tag.outputs.has_version }}" == "true" ]; then
            echo "**Version:** ${{ steps.get_tag.outputs.version }}" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            if [ "${{ inputs.force_latest_only }}" == "true" ]; then
              echo "**Tags pushed:**" >> $GITHUB_STEP_SUMMARY
              echo "- \`latest\`" >> $GITHUB_STEP_SUMMARY
            else
              echo "**Tags pushed:**" >> $GITHUB_STEP_SUMMARY
              echo "- \`${{ steps.get_tag.outputs.version }}\`" >> $GITHUB_STEP_SUMMARY
              echo "- Version tags (major.minor, major)" >> $GITHUB_STEP_SUMMARY
              echo "- \`latest\`" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "**No version tags found - pushed \`latest\` only**" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Registry:** \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
